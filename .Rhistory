panel.grid.major = element_line(color = "gray60", linewidth = 0.5, linetype = 1),
panel.background = element_blank(),
plot.background = element_blank(),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank(),
legend.position="none",
legend.text = element_text(size=12, face="bold"),
legend.title = element_text(size=16, face="bold"),
axis.title.x =  element_text(size=16, face="bold"),
axis.title.y = element_text(size=16, face="bold"),
axis.text.x =  element_text(size=14, face="bold", angle=60, hjust=1),
axis.text.y = element_text(size=12, face="bold"),
plot.title = element_text(size=22, face="bold"))
set.seed(34)
random_states <- sample(comb_data_pred$abbreviation, size=4)
states_plot <- comb_data_pred %>%
filter(abbreviation %in% random_states,
is.na(Y) == TRUE)
ggplot(states_plot, aes(date, truth)) +
geom_bar(stat="identity", fill="tan") +
geom_ribbon(aes(ymin=q0.05, ymax=q0.95),fill="steelblue", alpha = 0.3) +
geom_ribbon(aes(ymin=q0.25, ymax=q0.75),fill="steelblue", alpha = 0.5) +
geom_line(data=states_plot,
aes(date, q0.5)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
theme_classic() +
ylab("Hospitalizations") +
xlab(" ") +
theme_minimal() +
theme(panel.grid.minor = element_line(color = "gray90", linewidth = 0.25, linetype = 1),
panel.grid.major = element_line(color = "gray60", linewidth = 0.5, linetype = 1),
panel.background = element_blank(),
plot.background = element_blank(),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank(),
legend.position="none",
legend.text = element_text(size=12, face="bold"),
legend.title = element_text(size=16, face="bold"),
axis.title.x =  element_text(size=16, face="bold"),
axis.title.y = element_text(size=16, face="bold"),
axis.text.x =  element_text(size=14, face="bold", angle=60, hjust=1),
axis.text.y = element_text(size=12, face="bold"),
plot.title = element_text(size=22, face="bold"))
# Chunk 1
#wrangling
library(tidyverse)
library(lubridate)
#inference
library(INLA)
#use adaptive search algorithm
inla.setOption(inla.mode= "experimental")
options(dplyr.summarise.inform = FALSE)
# Chunk 2
#function to downlaod file
get_data <- function(url) {
df <- read_csv(url)
return(df)
}
flusion_url <- "https://github.com/JMHumphreys/flusion/raw/main/flusion/flusion_v1.csv"
flusion <- get_data(flusion_url)
head(flusion)
# Chunk 3
#FluSight: 2023-06-12
flusight_url <- "https://github.com/cdcepi/Flusight-forecast-data/raw/master/data-truth/truth-Incident%20Hospitalizations.csv"
flusight_truth <- get_data(flusight_url)
head(flusight_truth)
# Chunk 4
range(flusion$date)
range(flusight_truth$date) #1 week added since flusion.v1
flusight_truth <- flusight_truth %>%
mutate(truth = value) %>%
select(date, location, truth)
comb_data <- left_join(flusion, flusight_truth, by = c("date", "location"))
comb_data <- comb_data %>%
mutate(ts_weeks = as.integer(as.factor(year + epiweek/52)))
head(comb_data)
tail(comb_data)
dim(flusion)
which(is.na(flusion))
which(is.na(flusight_truth))
head(flusight_truth)
xx = flusight_truth %>% group_by(location) %>% summarise(cnt = length(truth))
xx
range(xx$cnt)
#FluSight: 2023-06-12
flusight_url <- "https://github.com/cdcepi/Flusight-forecast-data/raw/master/data-truth/truth-Incident%20Hospitalizations.csv"
flusight_truth <- get_data(flusight_url)
head(flusight_truth)
xx = flusight_truth %>% group_by(location) %>% summarise(cnt = length(truth))
xx = flusight_truth %>% group_by(location) %>% summarise(cnt = length(value))
range(xx$cnt)
xx = flusight_truth %>% group_by(location) %>% summarise(cnt = unique(length(date)))
range(xx$cnt)
xx = flusight_truth %>% group_by(location) %>% summarise(cnt = unique(length(date)))
range(xx$cnt)
CovidCAR:get_api("censusapi")
#spatial
library(CovidCAR)
CovidCAR
CovidCAR:get_api("censusapi")
get_api
get_api("censusapi")
yaml::read_yaml("secrets.yaml")
getwd()
yaml::read_yaml(file.path(getwd(), "secrets.yaml")
)
yaml::read_yaml(file.path(getwd(), "secrets.yaml"), readLines.warn = FALSE)[["censusapi"]]
file.path(getwd(), "secrets.yaml")
yaml::read_yaml(file.path(getwd(), "secrets.yaml"), readLines.warn = FALSE)[["censusapi"]]
get_api("censusapi")
get_fusion <- function(url) {
library(readr)
df <- read_csv(url)
return(df)
}
hub_url <- "https://github.com/JMHumphreys/flusion/raw/main/flusion/flusion_v2.csv"
myFlusion <- as.data.frame(get_fusion(hub_url))
get_fusion <- function(url) {
library(readr)
df <- read_csv(url)
return(df)
}
hub_url <- "https://github.com/JMHumphreys/flusion/raw/main/flusion/flusion_v2.csv"
myFlusion <- as.data.frame(get_fusion(hub_url))
head(myFlusion)
range(myFlusion$date)
unique(myFlusion$age_class)
unique(myFlusion$age_class)
season2022_23 <- myFlusion %>%
filter(age_class != "overall",
year >= 2022 & epiweek >= 40)
library(tidyverse)
library(tidyverse)
options(dplyr.summarise.inform = FALSE, show_col_types = FALSE)
unique(myFlusion$age_class)
season2022_23 <- myFlusion %>%
filter(age_class != "overall",
year >= 2022 & epiweek >= 40)
ggplot(season2022_23, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y", limits = c(xmin,xmax)) +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = c(0.7, 0.5),
legend.direction = "vertical",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
ggplot(season2022_23, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = c(0.7, 0.5),
legend.direction = "vertical",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
season2022_23 <- myFlusion %>%
filter(age_class != "overall",
date >= as_date("2022-10-01"))
season2022_23 <- myFlusion %>%
filter(age_class != "overall",
date >= as_date("2022-10-01"))
ggplot(season2022_23, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = c(0.7, 0.5),
legend.direction = "vertical",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
natl_sums <- myFlusion %>%
filter(age_class == "overall") %>%
group_by(date) %>%
summarise(Q0.25 = sum(q_0.25),
Q0.50 = sum(q_0.50),
Q0.75 = sum(q_0.75))
ggplot(natl_sums, aes(date, Q0.50)) +
geom_ribbon(aes(ymin=Q0.25, ymax=Q0.75),fill="steelblue", alpha = 0.8) +
geom_line(linewidth = 0.5) +
scale_x_date(date_breaks = "6 month", date_labels = "%b-%Y") +
ylab("Estimated Hospitalizations") +
xlab(" ") +
theme_minimal() +
theme(plot.margin = unit(c(2,0.1,2,0.1), "cm"),
panel.grid.minor = element_line(color = "gray90", linewidth = 0.25, linetype = 1),
panel.grid.major = element_line(color = "gray60", linewidth = 0.5, linetype = 1),
panel.background = element_blank(),
plot.background = element_blank(),
legend.position="none",
legend.text = element_text(size=12, face="bold"),
legend.title = element_text(size=16, face="bold"),
axis.title.x =  element_text(size=16, face="bold"),
axis.title.y = element_text(size=16, face="bold"),
axis.text.x =  element_text(size=14, face="bold", angle=60, hjust=1),
axis.text.y = element_text(size=12, face="bold"),
plot.title = element_text(size=22, face="bold"))
set.seed(123)
random_states <- sample(myFlusion$abbreviation, size=4)
states_plot <- natl_sums %>%
filter(abbreviation %in% random_states)
myFlusion$abbreviation
set.seed(123)
random_states <- sample(myFlusion$abbreviation, size=4)
random_states
set.seed(123)
random_states <- sample(myFlusion$abbreviation, size=4)
states_plot <- myFlusion %>%
filter(age_class == "overall") %>%
filter(abbreviation %in% random_states)
ggplot(states_plot, aes(date, q_0.50)) +
geom_ribbon(aes(ymin=q_0.025, ymax=q_0.975),fill="steelblue", alpha = 0.3) +
geom_ribbon(aes(ymin=q_0.25, ymax=q_0.75),fill="steelblue", alpha = 0.5) +
geom_line(linewidth = 0.5) +
scale_x_date(date_breaks = "6 month", date_labels = "%b-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
ylab("Estimated Hospitalizations") +
xlab(" ") +
theme_minimal() +
theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"),
panel.grid.minor = element_line(color = "gray90", linewidth = 0.25, linetype = 1),
panel.grid.major = element_line(color = "gray60", linewidth = 0.5, linetype = 1),
panel.background = element_blank(),
plot.background = element_blank(),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank(),
legend.position="none",
legend.title = element_text(size=16, face="bold"),
axis.title.x =  element_text(size=16, face="bold"),
axis.title.y = element_text(size=16, face="bold"),
axis.text.x =  element_text(size=12, face="bold", angle=60, hjust=1),
axis.text.y = element_text(size=12, face="bold"),
plot.title = element_text(size=22, face="bold"))
set.seed(111)
random_states <- sample(myFlusion$abbreviation, size=4)
random_yr <- sample(myFlusion$year, size=1)
states_plot_yr <- myFlusion %>%
filter(age_class == "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr | year == (random_yr + 1))
ggplot(states_plot_yr, aes(date, q_0.50)) +
geom_ribbon(aes(ymin=q_0.025, ymax=q_0.975),fill="steelblue", alpha = 0.3) +
geom_ribbon(aes(ymin=q_0.25, ymax=q_0.75),fill="steelblue", alpha = 0.5) +
geom_line(linewidth = 0.5) +
scale_x_date(date_breaks = "6 month", date_labels = "%b-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
ylab("Estimated Hospitalizations") +
xlab(" ") +
theme_minimal() +
theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"),
panel.grid.minor = element_line(color = "gray90", linewidth = 0.25, linetype = 1),
panel.grid.major = element_line(color = "gray60", linewidth = 0.5, linetype = 1),
panel.background = element_blank(),
plot.background = element_blank(),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank(),
legend.position="none",
legend.title = element_text(size=16, face="bold"),
axis.title.x =  element_text(size=16, face="bold"),
axis.title.y = element_text(size=16, face="bold"),
axis.text.x =  element_text(size=16, face="bold"),
axis.text.y = element_text(size=12, face="bold"),
plot.title = element_text(size=22, face="bold"))
set.seed(111)
random_states <- sample(myFlusion$abbreviation, size=4)
random_yr <- sample(myFlusion$year, size=1)
states_plot_yr <- myFlusion %>%
filter(age_class != "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr | year == (random_yr + 1))
ggplot(states_plot_yr, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = c(0.7, 0.5),
legend.direction = "vertical",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
states_plot_yr <- myFlusion %>%
filter(age_class != "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr & epiweek >= 40)
ggplot(states_plot_yr, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
states_plot_yr <- myFlusion %>%
filter(age_class != "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr,
epiweek >= 40 & epiweek <= 20)
ggplot(states_plot_yr, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
head(myFlusion)
states_plot_yr <- myFlusion %>%
filter(age_class != "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr,
epiweek >= 40 & epiweek <= 20)
ggplot(states_plot_yr, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
set.seed(111)
random_states <- sample(myFlusion$abbreviation, size=4)
random_yr <- sample(myFlusion$year, size=1)
states_plot_yr <- myFlusion %>%
filter(age_class != "overall") %>%
filter(abbreviation %in% random_states,
year == random_yr,
epiweek >= 40 & epiweek <= 20)
ggplot(states_plot_yr, aes(date, q_0.50, fill=age_class), col = "transparent") +
geom_bar(position="stack", stat="identity") +
viridis::scale_fill_viridis("Age Group",
discrete=T,
option = "turbo",
direction = -1,
na.value = "white") +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d-%Y") +
facet_grid(rows = vars(location_name), scales = "free_y") +
xlab(" ") +
ylab("Hospitalizations") +
ggtitle(" ") +
theme_classic() +
theme(plot.margin = unit(c(2,0.5,2,0.5), "cm"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
panel.border = element_blank(),
legend.title = element_text(size = 16, face = "bold", hjust=0.5),
legend.text = element_text(size=10, face="bold"),
strip.text = element_text(size=16, face="bold"),
strip.background = element_blank(),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.width = unit(2,"line"),
axis.text.y = element_text(face="bold", size=14),
axis.text.x = element_text(face="bold", size=14, angle = 60, hjust=1),
axis.title.x = element_text(size=22, face="bold"),
axis.title.y = element_text(size=22, face="bold"),
plot.title = element_text(size=25, face="bold", hjust=0.5))
