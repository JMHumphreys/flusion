{
  "hash": "79b9277098ed79a2239d9990623d5690",
  "result": {
    "markdown": "---\ntitle: \"Flu Season 2022-2023\"  \ndescription: \"Predicting flu season 2022-2023 using a randomwalk + trend model (non-spatial)\"\nformat:\n  html:\n    df-print: kable\n    code-fold: show\n    code-summary: \"Hide code\"\n    code-overflow: wrap\n    toc-title: Page Contents\n    toc: true\n    toc-depth: 2\n    toc-location: right\n    number-sections: true\n    html-math-method: katex\n    css: styles.css\n    theme: flatly\n    smooth-scroll: true\neditor_options: \n  chunk_output_type: console\n---\n\n```{=html}\n<style type=\"text/css\">\n\nbody, td {\n   font-size: 13pt;\n}\ncode.r{\n  font-size: 9pt;\n}\npre {\n  font-size: 11pt\n}\n</style>\n```\n\n\n## Overview  \nThis is a quick demonstration of using flusion data to forecast 2022-2023 influenza hospitalizations across all U.S. States and Territories.  The demo includes matching flusion to *truth* data from [FluSight](https://github.com/cdcepi/Flusight-forecast-data), constructing a non-spatial randomwalk model, and then comparing the predicted values to truth data.   \n     \n\n\n## Analysis Setup\n\n### Libraries\nLoading libraries.\n\n::: {.cell}\n\n```{.r .cell-code}\n#wrangling\nlibrary(tidyverse)\nlibrary(lubridate)\n\n#inference\nlibrary(INLA)\n#use adaptive search algorithm\ninla.setOption(inla.mode= \"experimental\")\n\noptions(dplyr.summarise.inform = FALSE)\n```\n:::\n\n\n### Observation Data\n\n**flusion**\n\n::: {.cell}\n\n```{.r .cell-code}\n#function to downlaod file\nget_data <- function(url) {\n  df <- read_csv(url)\n  return(df)\n}\n\nflusion_url <- \"https://github.com/JMHumphreys/flusion/raw/main/flusion/flusion_v1.csv\"\nflusion <- get_data(flusion_url)\nhead(flusion)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|date       | year| epiweek|abbreviation |location |location_name | q_0.025| q_0.25| q_0.50| q_0.75| q_0.975|\n|:----------|----:|-------:|:------------|:--------|:-------------|-------:|------:|------:|------:|-------:|\n|2010-10-09 | 2010|      40|AL           |01       |Alabama       |    0.13|   0.43|   0.80|   1.48|    4.83|\n|2010-10-09 | 2010|      40|AK           |02       |Alaska        |    0.04|   0.14|   0.26|   0.48|    1.58|\n|2010-10-09 | 2010|      40|AZ           |04       |Arizona       |    2.68|   8.71|  16.12|  29.72|   93.15|\n|2010-10-09 | 2010|      40|AR           |05       |Arkansas      |    0.08|   0.25|   0.47|   0.87|    2.82|\n|2010-10-09 | 2010|      40|CA           |06       |California    |    1.81|   5.89|  10.93|  20.24|   64.55|\n|2010-10-09 | 2010|      40|CO           |08       |Colorado      |    1.12|   3.65|   6.77|  12.55|   40.19|\n\n</div>\n:::\n:::\n\n\n**FluSight truth data**\n\n::: {.cell}\n\n```{.r .cell-code}\n#FluSight: 2023-06-12\nflusight_url <- \"https://github.com/cdcepi/Flusight-forecast-data/raw/master/data-truth/truth-Incident%20Hospitalizations.csv\" \nflusight_truth <- get_data(flusight_url)\nhead(flusight_truth)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|date       |location |location_name  | value|\n|:----------|:--------|:--------------|-----:|\n|2020-01-11 |01       |Alabama        |     0|\n|2020-01-11 |15       |Hawaii         |     0|\n|2020-01-11 |18       |Indiana        |     0|\n|2020-01-11 |27       |Minnesota      |     0|\n|2020-01-11 |30       |Montana        |     0|\n|2020-01-11 |37       |North Carolina |     0|\n\n</div>\n:::\n:::\n\n\n### Join Data\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(flusion$date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2010-10-09\" \"2023-06-03\"\n```\n:::\n\n```{.r .cell-code}\nrange(flusight_truth$date) #1 week added since flusion.v1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2020-01-11\" \"2023-06-10\"\n```\n:::\n\n```{.r .cell-code}\nflusight_truth <- flusight_truth %>%\n  mutate(truth = value) %>%\n  select(date, location, truth)\n\ncomb_data <- left_join(flusion, flusight_truth, by = c(\"date\", \"location\"))\n\ncomb_data <- comb_data %>%\n  mutate(ts_weeks = as.integer(as.factor(year + epiweek/52)))\n\nhead(comb_data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|date       | year| epiweek|abbreviation |location |location_name | q_0.025| q_0.25| q_0.50| q_0.75| q_0.975| truth| ts_weeks|\n|:----------|----:|-------:|:------------|:--------|:-------------|-------:|------:|------:|------:|-------:|-----:|--------:|\n|2010-10-09 | 2010|      40|AL           |01       |Alabama       |    0.13|   0.43|   0.80|   1.48|    4.83|    NA|        1|\n|2010-10-09 | 2010|      40|AK           |02       |Alaska        |    0.04|   0.14|   0.26|   0.48|    1.58|    NA|        1|\n|2010-10-09 | 2010|      40|AZ           |04       |Arizona       |    2.68|   8.71|  16.12|  29.72|   93.15|    NA|        1|\n|2010-10-09 | 2010|      40|AR           |05       |Arkansas      |    0.08|   0.25|   0.47|   0.87|    2.82|    NA|        1|\n|2010-10-09 | 2010|      40|CA           |06       |California    |    1.81|   5.89|  10.93|  20.24|   64.55|    NA|        1|\n|2010-10-09 | 2010|      40|CO           |08       |Colorado      |    1.12|   3.65|   6.77|  12.55|   40.19|    NA|        1|\n\n</div>\n:::\n\n```{.r .cell-code}\ntail(comb_data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|date       | year| epiweek|abbreviation |location |location_name  | q_0.025| q_0.25| q_0.50| q_0.75| q_0.975| truth| ts_weeks|\n|:----------|----:|-------:|:------------|:--------|:--------------|-------:|------:|------:|------:|-------:|-----:|--------:|\n|2023-06-03 | 2023|      22|WA           |53       |Washington     |    0.18|   0.95|   2.31|   5.58|   29.93|    19|      659|\n|2023-06-03 | 2023|      22|WV           |54       |West Virginia  |    0.08|   0.44|   1.05|   2.55|   13.62|     5|      659|\n|2023-06-03 | 2023|      22|WI           |55       |Wisconsin      |    0.20|   1.05|   2.54|   6.13|   32.45|     7|      659|\n|2023-06-03 | 2023|      22|WY           |56       |Wyoming        |    0.07|   0.40|   1.00|   2.47|   13.83|     1|      659|\n|2023-06-03 | 2023|      22|PR           |72       |Puerto Rico    |    0.14|   0.74|   1.79|   4.33|   23.44|    80|      659|\n|2023-06-03 | 2023|      22|VI           |78       |Virgin Islands |    0.00|   0.06|   0.25|   0.97|   12.79|     0|      659|\n\n</div>\n:::\n:::\n\n\n### Overlap Period  \nQuick plot to compare flusion estimates to FluSight truth.  \n\n::: {.cell}\n\n```{.r .cell-code}\noverlap_data <- comb_data %>%\n  filter(date >= min(flusight_truth$date) &\n         date <= max(flusight_truth$date))\n\n\noverlap_natl <- overlap_data %>%\n  group_by(date) %>%\n  summarise(flusion = sum(q_0.50),\n            truth = sum(truth, na.rm=T))\n\noverlap_natl <- reshape2::melt(overlap_natl, \"date\")\n\nggplot(overlap_natl, aes(date, value)) +\n  geom_bar(stat=\"identity\") +\n  facet_grid(rows = vars(variable)) +\n  scale_x_date(date_breaks = \"6 month\", date_labels = \"%b-%Y\") +\n  theme_classic() +\n  ylab(\"Hospitalizations\") +\n  xlab(\" \") +\n  theme_minimal() +\n  theme(plot.margin = unit(c(2,0.1,2,0.1), \"cm\"),\n        panel.grid.minor = element_line(color = \"gray90\", linewidth = 0.25, linetype = 1),\n        panel.grid.major = element_line(color = \"gray60\", linewidth = 0.5, linetype = 1),\n        panel.background = element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=14, face=\"bold\"),\n        strip.background = element_blank(),\n        legend.position=\"none\",\n        legend.text = element_text(size=12, face=\"bold\"),\n        legend.title = element_text(size=16, face=\"bold\"),\n        axis.title.x =  element_text(size=16, face=\"bold\"),\n        axis.title.y = element_text(size=16, face=\"bold\"),\n        axis.text.x =  element_text(size=14, face=\"bold\", angle=60, hjust=1),\n        axis.text.y = element_text(size=12, face=\"bold\"),\n        plot.title = element_text(size=22, face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](demo1_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n## Training vs Testing\nBreak data into testing and training sets.  Attempt to forecast the most recent flu season 2022-2033.  \n\n####Notes:   \n+ **Y** is the target response variable in the demo model  \n+ Dates between Oct 2022 through May 2023 as coded as unknown (NA)     \n+ The demo model will attempt to predict the NA's  \n\n::: {.cell}\n\n```{.r .cell-code}\ncomb_data$Y <- ifelse(comb_data$year >= 2022 & comb_data$epiweek >= 40, NA, comb_data$q_0.50)\n```\n:::\n\n\n## Organize Data\n\n::: {.cell}\n\n```{.r .cell-code}\ncomb_data <- comb_data %>%\n  mutate(intercept = 1,   #intercept\n         Y = round(Y, 0)) #round to integer count data\n         \n# copy location index\ncomb_data$Region.1 <- as.integer(comb_data$location)\n\n#copies of weekly time index\ncomb_data$ts_weeks.1 <- comb_data$ts_weeks.2 <- comb_data$ts_weeks.3 <- comb_data$ts_weeks\n```\n:::\n\n\n\n## Model  \n\n::: {.cell}\n\n```{.r .cell-code}\n#prior\npc.prior = list(prec = list(prior=\"pc.prec\", \n                            param = c(1, 0.5)))\n\n#formula\nform.rw <- Y ~ -1 + intercept + #use custom intercept\n  f(ts_weeks.1,   #random walk + noise   \n    constr=TRUE,\n    model=\"rw2\",\n    hyper=pc.prior) +\n  f(ts_weeks.2,  #extra variation outside of rw time and linear trends     \n    constr=TRUE,\n    model=\"iid\",\n    hyper=pc.prior) +\n  f(Region.1, #state-level variation          \n    constr=TRUE,\n    model=\"iid\",\n    hyper=pc.prior) +\n  ts_weeks.3    # linear trend\n\n#run model\n\nrw.mod = inla(form.rw, #formula\n      \t\t\t\t data = comb_data, #data \n      \t\t\t\t family = c(\"nbinomial\"), #negative binomial\n      \t\t\t\t verbose = FALSE, \n      \t\t\t\t quantiles = c(0.05, 0.25, 0.5, 0.75, 0.95),\n      \t\t\t\t control.fixed = list(prec = 1, \n      \t\t\t\t\t\t\t\t\t  prec.intercept = 1), \n      \t\t\t\t control.predictor = list(\n      \t\t\t\t\t\t\t\t\tcompute = TRUE, \n      \t\t\t\t\t\t\t\t\t\t  link = 1), \n      \t\t\t\t control.inla = list(strategy=\"adaptive\", \n      \t\t\t\t\t\t\t\t\t\t\t       int.strategy = \"eb\"), \n      \t\t\t\t control.compute=list(dic = F, cpo = F, waic = F))\n```\n:::\n\n\n## National Prediction \nThe bar chart indicates truth, solid line is the predicted 0.5 quantile, and shaded bands provide the 95 credible interval.   \n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_out <- rw.mod$summary.fitted.values[,c(3:7)]\nnames(model_out) <- c(\"q0.05\", \"q0.25\", \"q0.5\", \"q0.75\", \"q0.95\")\n\ncomb_data_pred <- cbind(comb_data, model_out)\n\nrw_natl <- comb_data_pred %>%\n  filter(is.na(Y) == TRUE) %>%\n  group_by(date) %>%\n  summarise(Q0.05 = sum(q0.05),\n            Q0.25 = sum(q0.25),\n            Q0.5 = sum(q0.5),\n            Q0.75 = sum(q0.75),\n            Q0.95 = sum(q0.95),\n            truth = sum(truth, na.rm=T))\n\n\nggplot(rw_natl, aes(date, truth)) +\n  geom_bar(stat=\"identity\", fill=\"tan\") +\n  geom_ribbon(aes(ymin=Q0.05, ymax=Q0.95),fill=\"steelblue\", alpha = 0.3) +\n  geom_ribbon(aes(ymin=Q0.25, ymax=Q0.75),fill=\"steelblue\", alpha = 0.5) +\n  geom_line(data=rw_natl,\n            aes(date, Q0.5)) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%Y\") +\n  theme_classic() +\n  ylab(\"Hospitalizations\") +\n  xlab(\" \") +\n  theme_minimal() +\n  theme(plot.margin = unit(c(2,0.1,2,0.1), \"cm\"),\n        panel.grid.minor = element_line(color = \"gray90\", linewidth = 0.25, linetype = 1),\n        panel.grid.major = element_line(color = \"gray60\", linewidth = 0.5, linetype = 1),\n        panel.background = element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=14, face=\"bold\"),\n        strip.background = element_blank(),\n        legend.position=\"none\",\n        legend.text = element_text(size=12, face=\"bold\"),\n        legend.title = element_text(size=16, face=\"bold\"),\n        axis.title.x =  element_text(size=16, face=\"bold\"),\n        axis.title.y = element_text(size=16, face=\"bold\"),\n        axis.text.x =  element_text(size=14, face=\"bold\", angle=60, hjust=1),\n        axis.text.y = element_text(size=12, face=\"bold\"),\n        plot.title = element_text(size=22, face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](demo1_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\n\n\n## Random States  \n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(34)\nrandom_states <- sample(comb_data_pred$abbreviation, size=4)\n\nstates_plot <- comb_data_pred %>%\n  filter(abbreviation %in% random_states,\n         is.na(Y) == TRUE)\n\n\nggplot(states_plot, aes(date, truth)) +\n  geom_bar(stat=\"identity\", fill=\"tan\") +\n  geom_ribbon(aes(ymin=q0.05, ymax=q0.95),fill=\"steelblue\", alpha = 0.3) +\n  geom_ribbon(aes(ymin=q0.25, ymax=q0.75),fill=\"steelblue\", alpha = 0.5) +\n  geom_line(data=states_plot,\n            aes(date, q0.5)) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b-%Y\") +\n  facet_grid(rows = vars(location_name), scales = \"free_y\") +\n  theme_classic() +\n  ylab(\"Hospitalizations\") +\n  xlab(\" \") +\n  theme_minimal() +\n  theme(panel.grid.minor = element_line(color = \"gray90\", linewidth = 0.25, linetype = 1),\n        panel.grid.major = element_line(color = \"gray60\", linewidth = 0.5, linetype = 1),\n        panel.background = element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=14, face=\"bold\"),\n        strip.background = element_blank(),\n        legend.position=\"none\",\n        legend.text = element_text(size=12, face=\"bold\"),\n        legend.title = element_text(size=16, face=\"bold\"),\n        axis.title.x =  element_text(size=16, face=\"bold\"),\n        axis.title.y = element_text(size=16, face=\"bold\"),\n        axis.text.x =  element_text(size=14, face=\"bold\", angle=60, hjust=1),\n        axis.text.y = element_text(size=12, face=\"bold\"),\n        plot.title = element_text(size=22, face=\"bold\"))\n```\n\n::: {.cell-output-display}\n![](demo1_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "demo1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}